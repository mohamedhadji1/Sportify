worker_processes 1;

events {
  worker_connections 1024;
}

http {
  sendfile on;
  # Upstream for the authentication service
  upstream auth_service_upstream {
    server auth-service:5000; # Points to the Kubernetes service for auth-service
  }

  # Placeholder upstreams for other services (initially commented out)
  # upstream booking_service_upstream {
  #   server booking-service:PORT; # Replace PORT with actual port
  # }
  # upstream payment_service_upstream {
  #   server payment-service:PORT;
  # }
  # upstream complaint_service_upstream {
  #   server complaint-service:PORT;
  # }
  # upstream team_service_upstream {
  #   server team-service:PORT;
  # }
  # upstream user_service_upstream {
  #   server user-service:PORT;
  # }
  # upstream tournament_service_upstream {
  #   server tournament-service:PORT;
  # }
  # upstream company_service_upstream {
  #   server company-service:PORT;
  # }
  # upstream court_service_upstream {
  #   server court-service:PORT;
  # }
  # upstream equipment_service_upstream {
  #   server equipment-service:PORT;
  # }

  # Upstream for the frontend service
  upstream frontend_service_upstream {
    server frontend-service:80; # Points to the Kubernetes service for the frontend
  }

  server {
    listen 80;

    # Default to frontend
    location / {
      proxy_pass http://frontend_service_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route API calls for auth-service
    location /api/auth/ {
      proxy_pass http://auth_service_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      # Optional: Rewrite /api/auth/(.*) to /$1 if auth-service expects paths without /api/auth/
      # rewrite ^/api/auth/(.*)$ /$1 break;
    }

    # Placeholder locations for other services (initially commented out)
    # location /api/booking/ {
    #   proxy_pass http://booking_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/payment/ {
    #   proxy_pass http://payment_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/complaint/ {
    #   proxy_pass http://complaint_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/team/ {
    #   proxy_pass http://team_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/users/ {
    #   proxy_pass http://user_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/tournament/ {
    #   proxy_pass http://tournament_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/company/ {
    #   proxy_pass http://company_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/court/ {
    #   proxy_pass http://court_service_upstream;
    #   # ... proxy headers ...
    # }
    # location /api/equipment/ {
    #   proxy_pass http://equipment_service_upstream;
    #   # ... proxy headers ...
    # }

    # Handle WebSocket connections if any app uses them (e.g., for Socket.IO)
    # This might need to be adjusted based on which service handles WebSockets
    # location /socket.io/ {
    #   proxy_pass http://auth_service_upstream; # Example: if auth service handles it
    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection "Upgrade";
    #   proxy_set_header Host $host;
    # }
  }
} 